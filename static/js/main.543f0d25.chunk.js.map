{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/Searchbox.js","robots.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","name","email","id","className","src","alt","Cardlist","robots","length","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","username","Scroll","props","style","overflowY","height","border","children","ErrorBoundry","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","filteredRobots","filter","robot","toLowerCase","includes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6CCJSC,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACxB,OACE,yBAAKC,UAAU,wDACb,yBAAKC,IAAG,+BAA0BF,GAAMG,IAAI,KAC5C,6BACE,4BAAKL,GACL,2BAAIC,MCQGK,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OAAQA,EAAOC,OAEXD,EAAOE,KAAI,SAACC,EAAMC,GAChB,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAChBT,GAAIQ,EAAKR,GACTF,KAAMU,EAAKV,KACXC,MAAOS,EAAKT,WANG,mDCFZY,EAAY,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACzB,OACE,6BACE,2BACEX,UAAU,uCACVY,KAAK,SACLC,YAAY,gBACZC,SAAWH,MCTNP,EAAS,CACpB,CACEL,GAAI,EACJF,KAAM,gBACNkB,SAAU,OACVjB,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,eACNkB,SAAU,YACVjB,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,mBACNkB,SAAU,WACVjB,MAAO,sBAET,CACEC,GAAI,EACJF,KAAM,mBACNkB,SAAU,WACVjB,MAAO,6BAET,CACEC,GAAI,EACJF,KAAM,mBACNkB,SAAU,SACVjB,MAAO,4BAET,CACEC,GAAI,EACJF,KAAM,uBACNkB,SAAU,mBACVjB,MAAO,2BAET,CACEC,GAAI,EACJF,KAAM,kBACNkB,SAAU,eACVjB,MAAO,0BAET,CACEC,GAAI,EACJF,KAAM,2BACNkB,SAAU,gBACVjB,MAAO,wBAET,CACEC,GAAI,EACJF,KAAM,kBACNkB,SAAU,WACVjB,MAAO,2BAET,CACEC,GAAI,GACJF,KAAM,qBACNkB,SAAU,iBACVjB,MAAO,2BClDIkB,EAPA,SAACC,GACd,OACE,yBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,QAAQC,OAAO,oBACrDJ,EAAMK,WCiBEC,G,kBAnBb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KAEDO,MAAQ,CACXC,UAAW,GAJI,E,iFASjBC,KAAKC,SAAS,CAACF,UAAS,M,+BAKxB,OADmBC,KAAKF,MAAjBC,SACU,uDACfC,KAAKT,MAAMK,a,GAhBUM,cCwCZC,E,YAjCb,aAAe,IAAD,8BACZ,+CAOFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CACZK,YAAaD,EAAME,OAAOC,SAR5B,EAAKV,MAAQ,CACXpB,OAAQA,EACR4B,YAAa,IAJH,E,sEAcJ,IAAD,EACyBN,KAAKF,MAA7BpB,EADD,EACCA,OAAQ4B,EADT,EACSA,YACVG,EAAiB/B,EAAOgC,QAAO,SAAAC,GACnC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASP,EAAYM,kBAEvD,OACE,yBAAKtC,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,aAAce,KAAKI,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAU1B,OAAQ+B,W,GA1BVP,aCDlBY,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SR4H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.543f0d25.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\nconst Card = ({name,email,id}) => {\r\n  return (\r\n    <div className=\" tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}`} alt=\"\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({ robots }) => {\r\n  return !robots.length? <h3>There isn't any...</h3>\r\n    :(\r\n      robots.map((user, i) => {\r\n        return <Card key={i}\r\n          id={user.id}\r\n          name={user.name}\r\n          email={user.email}\r\n        />\r\n      }\r\n      )\r\n    )\r\n  }\r\nexport default Cardlist","import React from 'react'\r\n\r\nexport const SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue mb3\"\r\n        type='search'\r\n        placeholder=\"search robots\"\r\n        onChange= {searchChange} />\r\n    </div>\r\n  )\r\n  }","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', height:'500px',border:'5px solid black'}}>\r\n      {props.children}\r\n    </div>)\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      hasError : false\r\n    }\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({hasError:true})\r\n  }\r\n\r\n  render() {\r\n    const {hasError} = this.state\r\n    return hasError? <h1>Ooops.An error occurred</h1>\r\n    : this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react'\r\nimport Cardlist from '../components/CardList';\r\nimport { SearchBox } from '../components/Searchbox'\r\nimport { robots } from '../robots';\r\nimport Scroll from '../components/Scroll';\r\nimport './app.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: robots,\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({\r\n      searchfield: event.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f2\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n          <Cardlist robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}